<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="SYS_REGION">


	<resultMap class="com.aic.paas.sys.provider.bean.SysRegion" id="queryResult">
		<result column="ID" jdbcType="BIGINT" property="id"/>	<!-- ID -->
		<result column="REG_CODE" jdbcType="VARCHAR" property="regCode"/>	<!-- 区域代码 -->
		<result column="REG_NAME" jdbcType="VARCHAR" property="regName"/>	<!-- 区域名称 -->
		<result column="REG_FULL_NAME" jdbcType="VARCHAR" property="regFullName"/>	<!-- 区域全称 -->
		<result column="REG_LEVEL" jdbcType="INTEGER" property="regLevel"/>	<!-- 区域级别 -->
		<result column="REG_PARENT_ID" jdbcType="BIGINT" property="regParentId"/>	<!-- 上级区域ID -->
		<result column="REG_DESC" jdbcType="VARCHAR" property="regDesc"/>	<!-- 区域描述 -->
		<result column="REG_CODE_PATH" jdbcType="VARCHAR" property="regCodePath"/>	<!-- 区域代码层级路径 -->
		<result column="REG_NAME_PATH" jdbcType="VARCHAR" property="regNamePath"/>	<!-- 区域名称层级路径 -->
		<result column="REG_ZIP_CODE" jdbcType="VARCHAR" property="regZipCode"/>	<!-- 邮政编码 -->
		<result column="ICON" jdbcType="VARCHAR" property="icon"/>	<!-- 图标 -->
		<result column="ORDER_NO" jdbcType="INTEGER" property="orderNo"/>	<!-- 排序号 -->
		<result column="CUSTOM_1" jdbcType="VARCHAR" property="custom1"/>	<!-- 备用_1 -->
		<result column="CUSTOM_2" jdbcType="VARCHAR" property="custom2"/>	<!-- 备用_2 -->
		<result column="CUSTOM_3" jdbcType="VARCHAR" property="custom3"/>	<!-- 备用_3 -->
		<result column="CUSTOM_4" jdbcType="BIGINT" property="custom4"/>	<!-- 备用_4 -->
		<result column="CUSTOM_5" jdbcType="BIGINT" property="custom5"/>	<!-- 备用_5 -->
		<result column="CUSTOM_6" jdbcType="BIGINT" property="custom6"/>	<!-- 备用_6 -->
		<result column="STATUS" jdbcType="INTEGER" property="status"/>	<!-- 有效状态 -->
		<result column="DATA_STATUS" jdbcType="INTEGER" property="dataStatus"/>	<!-- 数据状态 -->
		<result column="CREATE_TIME" jdbcType="BIGINT" property="createTime"/>	<!-- 创建时间 -->
		<result column="MODIFY_TIME" jdbcType="BIGINT" property="modifyTime"/>	<!-- 修改时间 -->
	</resultMap>
	

	<sql id="sql_query_where">
		<isNotEmpty prepend="and" property="cdt.id" >
			ID = #cdt.id:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ids" >
			ID in ($ids$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startId" >
			<![CDATA[ ID >= #cdt.startId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endId" >
			<![CDATA[ ID <= #cdt.endId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regCode" >
			REG_CODE like #cdt.regCode:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regCodeEqual" >
			REG_CODE = #cdt.regCodeEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="regCodes" >
			REG_CODE in ($regCodes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regName" >
			REG_NAME like #cdt.regName:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regNameEqual" >
			REG_NAME = #cdt.regNameEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="regNames" >
			REG_NAME in ($regNames$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regFullName" >
			REG_FULL_NAME like #cdt.regFullName:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regLevel" >
			REG_LEVEL = #cdt.regLevel:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="regLevels" >
			REG_LEVEL in ($regLevels$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startRegLevel" >
			<![CDATA[ REG_LEVEL >= #cdt.startRegLevel:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endRegLevel" >
			<![CDATA[ REG_LEVEL <= #cdt.endRegLevel:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regParentId" >
			REG_PARENT_ID = #cdt.regParentId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="regParentIds" >
			REG_PARENT_ID in ($regParentIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startRegParentId" >
			<![CDATA[ REG_PARENT_ID >= #cdt.startRegParentId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endRegParentId" >
			<![CDATA[ REG_PARENT_ID <= #cdt.endRegParentId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regDesc" >
			REG_DESC like #cdt.regDesc:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regCodePath" >
			REG_CODE_PATH like #cdt.regCodePath:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regNamePath" >
			REG_NAME_PATH like #cdt.regNamePath:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regZipCode" >
			REG_ZIP_CODE like #cdt.regZipCode:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.regZipCodeEqual" >
			REG_ZIP_CODE = #cdt.regZipCodeEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="regZipCodes" >
			REG_ZIP_CODE in ($regZipCodes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.icon" >
			ICON like #cdt.icon:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.iconEqual" >
			ICON = #cdt.iconEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="icons" >
			ICON in ($icons$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.orderNo" >
			ORDER_NO = #cdt.orderNo:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="orderNos" >
			ORDER_NO in ($orderNos$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startOrderNo" >
			<![CDATA[ ORDER_NO >= #cdt.startOrderNo:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endOrderNo" >
			<![CDATA[ ORDER_NO <= #cdt.endOrderNo:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom1" >
			CUSTOM_1 like #cdt.custom1:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom2" >
			CUSTOM_2 like #cdt.custom2:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom3" >
			CUSTOM_3 like #cdt.custom3:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom4" >
			CUSTOM_4 = #cdt.custom4:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom4s" >
			CUSTOM_4 in ($custom4s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom4" >
			<![CDATA[ CUSTOM_4 >= #cdt.startCustom4:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom4" >
			<![CDATA[ CUSTOM_4 <= #cdt.endCustom4:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom5" >
			CUSTOM_5 = #cdt.custom5:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom5s" >
			CUSTOM_5 in ($custom5s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom5" >
			<![CDATA[ CUSTOM_5 >= #cdt.startCustom5:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom5" >
			<![CDATA[ CUSTOM_5 <= #cdt.endCustom5:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom6" >
			CUSTOM_6 = #cdt.custom6:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom6s" >
			CUSTOM_6 in ($custom6s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom6" >
			<![CDATA[ CUSTOM_6 >= #cdt.startCustom6:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom6" >
			<![CDATA[ CUSTOM_6 <= #cdt.endCustom6:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.status" >
			STATUS = #cdt.status:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="statuss" >
			STATUS in ($statuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startStatus" >
			<![CDATA[ STATUS >= #cdt.startStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endStatus" >
			<![CDATA[ STATUS <= #cdt.endStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataStatus" >
			DATA_STATUS = #cdt.dataStatus:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataStatuss" >
			DATA_STATUS in ($dataStatuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataStatus" >
			<![CDATA[ DATA_STATUS >= #cdt.startDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataStatus" >
			<![CDATA[ DATA_STATUS <= #cdt.endDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.createTime" >
			CREATE_TIME = #cdt.createTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="createTimes" >
			CREATE_TIME in ($createTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCreateTime" >
			<![CDATA[ CREATE_TIME >= #cdt.startCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCreateTime" >
			<![CDATA[ CREATE_TIME <= #cdt.endCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modifyTime" >
			MODIFY_TIME = #cdt.modifyTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="modifyTimes" >
			MODIFY_TIME in ($modifyTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startModifyTime" >
			<![CDATA[ MODIFY_TIME >= #cdt.startModifyTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endModifyTime" >
			<![CDATA[ MODIFY_TIME <= #cdt.endModifyTime:BIGINT# ]]>
		</isNotEmpty>
	</sql>
	

	<sql id="sql_update_columns">
		<isNotNull prepend="," property="record.id"> 
			ID = #record.id:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.regCode"> 
			REG_CODE = #record.regCode:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.regName"> 
			REG_NAME = #record.regName:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.regFullName"> 
			REG_FULL_NAME = #record.regFullName:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.regLevel"> 
			REG_LEVEL = #record.regLevel:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.regParentId"> 
			REG_PARENT_ID = #record.regParentId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.regDesc"> 
			REG_DESC = #record.regDesc:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.regCodePath"> 
			REG_CODE_PATH = #record.regCodePath:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.regNamePath"> 
			REG_NAME_PATH = #record.regNamePath:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.regZipCode"> 
			REG_ZIP_CODE = #record.regZipCode:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.icon"> 
			ICON = #record.icon:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.orderNo"> 
			ORDER_NO = #record.orderNo:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.custom1"> 
			CUSTOM_1 = #record.custom1:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom2"> 
			CUSTOM_2 = #record.custom2:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom3"> 
			CUSTOM_3 = #record.custom3:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom4"> 
			CUSTOM_4 = #record.custom4:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom5"> 
			CUSTOM_5 = #record.custom5:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom6"> 
			CUSTOM_6 = #record.custom6:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.status"> 
			STATUS = #record.status:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.dataStatus"> 
			DATA_STATUS = #record.dataStatus:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.createTime"> 
			CREATE_TIME = #record.createTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.modifyTime"> 
			MODIFY_TIME = #record.modifyTime:BIGINT#
		</isNotNull>
	</sql>
	

	<sql id="sql_query_columns">
		ID, REG_CODE, REG_NAME, REG_FULL_NAME, REG_LEVEL, REG_PARENT_ID, 
		REG_DESC, REG_CODE_PATH, REG_NAME_PATH, REG_ZIP_CODE, ICON, ORDER_NO, 
		CUSTOM_1, CUSTOM_2, CUSTOM_3, CUSTOM_4, CUSTOM_5, CUSTOM_6, 
		STATUS, DATA_STATUS, CREATE_TIME, MODIFY_TIME
	</sql>
	

	

	<select id="selectList" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="SYS_REGION.sql_query_columns" />
		from SYS_REGION 
			<dynamic prepend="where" >
				<include refid="SYS_REGION.sql_query_where"/>
			</dynamic>
		order by 
			<isNotEmpty property="orders" >
				$orders$
			</isNotEmpty>
			<isEmpty property="orders" >
				ID
			</isEmpty>
	</select>
	<select id="selectCount" parameterClass="java.util.Map" resultClass="java.lang.Long">
		select count(1) from SYS_REGION 
			<dynamic prepend="where" >
				<include refid="SYS_REGION.sql_query_where"/>
			</dynamic>
	</select>
	<select id="selectById" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="SYS_REGION.sql_query_columns" />
		from SYS_REGION where ID=#id:BIGINT# and DATA_STATUS=1  
	</select>
	

	

	<insert id="insert" parameterClass="java.util.Map">
		insert into SYS_REGION(
			ID, REG_CODE, REG_NAME, REG_FULL_NAME, REG_LEVEL, 
			REG_PARENT_ID, REG_DESC, REG_CODE_PATH, REG_NAME_PATH, REG_ZIP_CODE, 
			ICON, ORDER_NO, CUSTOM_1, CUSTOM_2, CUSTOM_3, 
			CUSTOM_4, CUSTOM_5, CUSTOM_6, STATUS, DATA_STATUS, 
			CREATE_TIME, MODIFY_TIME)
		values (
			#record.id:BIGINT#, #record.regCode:VARCHAR#, #record.regName:VARCHAR#, #record.regFullName:VARCHAR#, #record.regLevel:INTEGER#, 
			#record.regParentId:BIGINT#, #record.regDesc:VARCHAR#, #record.regCodePath:VARCHAR#, #record.regNamePath:VARCHAR#, #record.regZipCode:VARCHAR#, 
			#record.icon:VARCHAR#, #record.orderNo:INTEGER#, #record.custom1:VARCHAR#, #record.custom2:VARCHAR#, #record.custom3:VARCHAR#, 
			#record.custom4:BIGINT#, #record.custom5:BIGINT#, #record.custom6:BIGINT#, #record.status:INTEGER#, #record.dataStatus:INTEGER#, 
			#record.createTime:BIGINT#, #record.modifyTime:BIGINT#)
	</insert>
	

	

	<update id="updateById" parameterClass="java.util.Map">
		update SYS_REGION
			<dynamic prepend="set" > 
				<include refid="SYS_REGION.sql_update_columns"/> 
			</dynamic>
		where ID = #id:BIGINT#
	</update>
	<update id="updateByCdt" parameterClass="java.util.Map">
		update SYS_REGION
			<dynamic prepend="set" > 
				<include refid="SYS_REGION.sql_update_columns"/> 
			</dynamic>
			<dynamic prepend="where" > 
				<include refid="SYS_REGION.sql_query_where"/> 
			</dynamic>
	</update>
	
	

	

	<delete id="deleteById" parameterClass="java.util.Map">
		delete from SYS_REGION where ID = #id:BIGINT#
	</delete>
	<delete id="deleteByCdt" parameterClass="java.util.Map">
		delete from SYS_REGION
			<dynamic prepend="where" > 
				<include refid="SYS_REGION.sql_query_where"/> 
			</dynamic>
	</delete>
	



</sqlMap>
