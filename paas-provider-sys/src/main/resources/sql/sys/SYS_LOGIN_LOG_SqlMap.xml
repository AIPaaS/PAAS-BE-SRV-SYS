<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="SYS_LOGIN_LOG">


	<resultMap class="com.aic.paas.sys.provider.bean.SysLoginLog" id="queryResult">
		<result column="ID" jdbcType="BIGINT" property="id"/>	<!-- ID -->
		<result column="USER_ID" jdbcType="BIGINT" property="userId"/>	<!-- 用户ID -->
		<result column="USER_CODE" jdbcType="VARCHAR" property="userCode"/>	<!-- 用户代码 -->
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>	<!-- 用户姓名 -->
		<result column="SESSION_ID" jdbcType="VARCHAR" property="sessionId"/>	<!-- 会话ID -->
		<result column="LOGIN_TIME" jdbcType="BIGINT" property="loginTime"/>	<!-- 登录时间 -->
		<result column="LOGOUT_TIME" jdbcType="BIGINT" property="logoutTime"/>	<!-- 登出时间 -->
		<result column="REMARK" jdbcType="VARCHAR" property="remark"/>	<!-- 描述 -->
		<result column="DATA_STATUS" jdbcType="INTEGER" property="dataStatus"/>	<!-- 数据状态 -->
		<result column="CREATE_TIME" jdbcType="BIGINT" property="createTime"/>	<!-- 创建时间 -->
		<result column="MODIFY_TIME" jdbcType="BIGINT" property="modifyTime"/>	<!-- 修改时间 -->
	</resultMap>
	

	<sql id="sql_query_where">
		<isNotEmpty prepend="and" property="cdt.id" >
			ID = #cdt.id:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ids" >
			ID in ($ids$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startId" >
			<![CDATA[ ID >= #cdt.startId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endId" >
			<![CDATA[ ID <= #cdt.endId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.userId" >
			USER_ID = #cdt.userId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="userIds" >
			USER_ID in ($userIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startUserId" >
			<![CDATA[ USER_ID >= #cdt.startUserId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endUserId" >
			<![CDATA[ USER_ID <= #cdt.endUserId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.userCode" >
			USER_CODE like #cdt.userCode:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.userCodeEqual" >
			USER_CODE = #cdt.userCodeEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="userCodes" >
			USER_CODE in ($userCodes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.userName" >
			USER_NAME like #cdt.userName:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.userNameEqual" >
			USER_NAME = #cdt.userNameEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="userNames" >
			USER_NAME in ($userNames$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.sessionId" >
			SESSION_ID like #cdt.sessionId:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.sessionIdEqual" >
			SESSION_ID = #cdt.sessionIdEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="sessionIds" >
			SESSION_ID in ($sessionIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.loginTime" >
			LOGIN_TIME = #cdt.loginTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="loginTimes" >
			LOGIN_TIME in ($loginTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startLoginTime" >
			<![CDATA[ LOGIN_TIME >= #cdt.startLoginTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endLoginTime" >
			<![CDATA[ LOGIN_TIME <= #cdt.endLoginTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.logoutTime" >
			LOGOUT_TIME = #cdt.logoutTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="logoutTimes" >
			LOGOUT_TIME in ($logoutTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startLogoutTime" >
			<![CDATA[ LOGOUT_TIME >= #cdt.startLogoutTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endLogoutTime" >
			<![CDATA[ LOGOUT_TIME <= #cdt.endLogoutTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.remark" >
			REMARK like #cdt.remark:VARCHAR# escape '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataStatus" >
			DATA_STATUS = #cdt.dataStatus:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataStatuss" >
			DATA_STATUS in ($dataStatuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataStatus" >
			<![CDATA[ DATA_STATUS >= #cdt.startDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataStatus" >
			<![CDATA[ DATA_STATUS <= #cdt.endDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.createTime" >
			CREATE_TIME = #cdt.createTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="createTimes" >
			CREATE_TIME in ($createTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCreateTime" >
			<![CDATA[ CREATE_TIME >= #cdt.startCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCreateTime" >
			<![CDATA[ CREATE_TIME <= #cdt.endCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modifyTime" >
			MODIFY_TIME = #cdt.modifyTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="modifyTimes" >
			MODIFY_TIME in ($modifyTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startModifyTime" >
			<![CDATA[ MODIFY_TIME >= #cdt.startModifyTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endModifyTime" >
			<![CDATA[ MODIFY_TIME <= #cdt.endModifyTime:BIGINT# ]]>
		</isNotEmpty>
	</sql>
	

	<sql id="sql_update_columns">
		<isNotNull prepend="," property="record.id"> 
			ID = #record.id:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.userId"> 
			USER_ID = #record.userId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.userCode"> 
			USER_CODE = #record.userCode:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.userName"> 
			USER_NAME = #record.userName:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.sessionId"> 
			SESSION_ID = #record.sessionId:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.loginTime"> 
			LOGIN_TIME = #record.loginTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.logoutTime"> 
			LOGOUT_TIME = #record.logoutTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.remark"> 
			REMARK = #record.remark:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.dataStatus"> 
			DATA_STATUS = #record.dataStatus:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.createTime"> 
			CREATE_TIME = #record.createTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.modifyTime"> 
			MODIFY_TIME = #record.modifyTime:BIGINT#
		</isNotNull>
	</sql>
	

	<sql id="sql_query_columns">
		ID, USER_ID, USER_CODE, USER_NAME, SESSION_ID, LOGIN_TIME, 
		LOGOUT_TIME, REMARK, DATA_STATUS, CREATE_TIME, MODIFY_TIME
	</sql>
	

	

	<select id="selectList" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="SYS_LOGIN_LOG.sql_query_columns" />
		from SYS_LOGIN_LOG 
			<dynamic prepend="where" >
				<include refid="SYS_LOGIN_LOG.sql_query_where"/>
			</dynamic>
		order by 
			<isNotEmpty property="orders" >
				$orders$
			</isNotEmpty>
			<isEmpty property="orders" >
				ID
			</isEmpty>
	</select>
	<select id="selectCount" parameterClass="java.util.Map" resultClass="java.lang.Long">
		select count(1) from SYS_LOGIN_LOG 
			<dynamic prepend="where" >
				<include refid="SYS_LOGIN_LOG.sql_query_where"/>
			</dynamic>
	</select>
	<select id="selectById" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="SYS_LOGIN_LOG.sql_query_columns" />
		from SYS_LOGIN_LOG where ID=#id:BIGINT# and DATA_STATUS=1  
	</select>
	

	

	<insert id="insert" parameterClass="java.util.Map">
		insert into SYS_LOGIN_LOG(
			ID, USER_ID, USER_CODE, USER_NAME, SESSION_ID, 
			LOGIN_TIME, LOGOUT_TIME, REMARK, DATA_STATUS, CREATE_TIME, 
			MODIFY_TIME)
		values (
			#record.id:BIGINT#, #record.userId:BIGINT#, #record.userCode:VARCHAR#, #record.userName:VARCHAR#, #record.sessionId:VARCHAR#, 
			#record.loginTime:BIGINT#, #record.logoutTime:BIGINT#, #record.remark:VARCHAR#, #record.dataStatus:INTEGER#, #record.createTime:BIGINT#, 
			#record.modifyTime:BIGINT#)
	</insert>
	

	

	<update id="updateById" parameterClass="java.util.Map">
		update SYS_LOGIN_LOG
			<dynamic prepend="set" > 
				<include refid="SYS_LOGIN_LOG.sql_update_columns"/> 
			</dynamic>
		where ID = #id:BIGINT#
	</update>
	<update id="updateByCdt" parameterClass="java.util.Map">
		update SYS_LOGIN_LOG
			<dynamic prepend="set" > 
				<include refid="SYS_LOGIN_LOG.sql_update_columns"/> 
			</dynamic>
			<dynamic prepend="where" > 
				<include refid="SYS_LOGIN_LOG.sql_query_where"/> 
			</dynamic>
	</update>
	
	

	

	<delete id="deleteById" parameterClass="java.util.Map">
		delete from SYS_LOGIN_LOG where ID = #id:BIGINT#
	</delete>
	<delete id="deleteByCdt" parameterClass="java.util.Map">
		delete from SYS_LOGIN_LOG
			<dynamic prepend="where" > 
				<include refid="SYS_LOGIN_LOG.sql_query_where"/> 
			</dynamic>
	</delete>
	



</sqlMap>
